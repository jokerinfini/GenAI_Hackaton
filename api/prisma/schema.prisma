// datasource and generator
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Farmer {
  id        String   @id @default(cuid())
  name      String
  email     String?  @unique
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  plots     Plot[]
}

model Plot {
  id          String       @id @default(cuid())
  name        String
  farmerId    String
  farmer      Farmer       @relation(fields: [farmerId], references: [id])
  geometry    Json         // GeoJSON Polygon
  areaHa      Float
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  treeSamples TreeSample[]
  soilSamples SoilSample[]
  climateData ClimateData[]
  managementPractices ManagementPractice[]
  baselineEmissions BaselineEmission[]
  calcs       CreditCalc[]
}

model TreeSample {
  id        String   @id @default(cuid())
  plotId    String
  plot      Plot     @relation(fields: [plotId], references: [id])
  species   String?
  dbh_cm    Float
  createdAt DateTime @default(now())
}

model SoilSample {
  id                String   @id @default(cuid())
  plotId            String
  plot              Plot     @relation(fields: [plotId], references: [id])
  bulkDensity       Float    // g/cm³
  soilDepth         Float    // cm (0-30 recommended)
  carbonConcentration Float  // %
  clayContent       Float    // %
  samplingDate      DateTime
  createdAt         DateTime @default(now())
}

model ClimateData {
  id              String   @id @default(cuid())
  plotId          String
  plot            Plot     @relation(fields: [plotId], references: [id])
  month           Int      // 1-12
  year            Int
  meanTemperature Float    // °C
  totalRainfall   Float    // mm
  evaporation     Float    // mm
  createdAt       DateTime @default(now())
}

model ManagementPractice {
  id              String   @id @default(cuid())
  plotId          String
  plot            Plot     @relation(fields: [plotId], references: [id])
  month           Int
  year            Int
  carbonInputs    Float    // t C/ha
  dpmRpmRatio     Float    // default 1.44
  soilCover       Boolean  // vegetated/bare
  fertilizerN     Float    // kg N/ha (for N2O calculation)
  livestockPresent Boolean // for CH4 calculation
  createdAt       DateTime @default(now())
}

model BaselineEmission {
  id              String   @id @default(cuid())
  plotId          String
  plot            Plot     @relation(fields: [plotId], references: [id])
  n2oEmissions    Float    // kg N2O/ha
  ch4Emissions    Float    // kg CH4/ha
  totalCO2e       Float    // t CO2e/ha
  createdAt       DateTime @default(now())
}

model CreditCalc {
  id          String   @id @default(cuid())
  plotId      String
  plot        Plot     @relation(fields: [plotId], references: [id])
  method      String
  inputs      Json
  outputs     Json
  total_tCO2e Float
  createdAt   DateTime @default(now())
}

model EmissionFactor {
  id               String  @id @default(cuid())
  name             String  @unique
  a                Float   // allometric parameter
  b                Float   // allometric exponent
  root_shoot_ratio Float
  carbon_fraction  Float
  co2_conversion   Float
}
